{"version":3,"file":"component---src-pages-using-ssr-js-41d445350bf47d31495d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/PasswordProtect.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport '/src/styles/global.css';\n\nconst PasswordProtect = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  const correctPassword = \"green\"; // Set your password here\n\n  useEffect(() => {\n    // Check if the user is already authenticated by looking at localStorage\n    const storedPassword = localStorage.getItem(\"authenticated\");\n    if (storedPassword === correctPassword) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === correctPassword) {\n      // Store the password in localStorage to remember the user is authenticated\n      localStorage.setItem(\"authenticated\", correctPassword);\n      setIsAuthenticated(true);\n    } else {\n      alert(\"Incorrect password!\");\n    }\n  };\n\n  return isAuthenticated ? (\n    children\n  ) : (\n    <div className=\"passwordpage\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Enter Password\"\n          className=\"passwordinput\"\n        />\n        <button type=\"submit\">\n          Submit →\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordProtect;\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"header\">\n    <a href=\"/#home\" className=\"vishaka\">\n      Vishaka Nirmal\n    </a>\n    <Link to=\"/#projects\" activeClassName=\"active\">Case Studies</Link>\n    <Link to=\"/#archive\" activeClassName=\"active\">Archive</Link>\n    <Link to=\"/#about\" activeClassName=\"active\">About</Link>\n  </header>\n)\n\nexport default Header;","import * as React from \"react\";\nimport '../styles/global.css';\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport PasswordProtect from \"/src/components/PasswordProtect\";\nimport Header from \"./header\";\n\nconst Layout = ({ children }) => {\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  const content = (\n    <div>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <main>{children}</main>\n      <footer className=\"site-footer\">\n        © {new Date().getFullYear()} &middot; designed & coded by Vishaka\n      </footer>\n    </div>\n  );\n\n  return content;\n  \n\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["_ref","children","isAuthenticated","setIsAuthenticated","useState","password","setPassword","correctPassword","useEffect","localStorage","getItem","React","className","onSubmit","e","preventDefault","setItem","alert","type","value","onChange","target","placeholder","siteTitle","href","Link","to","activeClassName","_data$site$siteMetada","data","useStaticQuery","Header","site","siteMetadata","title","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","style","width","borderRadius","alt","src","message"],"sourceRoot":""}